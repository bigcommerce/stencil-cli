#!/usr/bin/env node

require('colors');

var Fs = require('fs'),
    Inquirer = require('inquirer'),
    Jspm = require('jspm'),
    JspmAssembler = require('../lib/jspmAssembler'),
    Path = require('path'),
    Program = require('commander'),
    ThemeConfig = require('../lib/themeConfig'),
    pkg = require('../package.json'),
    dotStencilFilePath = './.stencil',
    dotStencilFileExists = Fs.existsSync(dotStencilFilePath),
    dotStencilFile,
    themePath = process.cwd(),
    themeConfigPath = Path.join(themePath, 'config.json'),
    themeConfig;

Program
    .version(pkg.version)
    .parse(process.argv);

if (dotStencilFileExists) {
    dotStencilFile = Fs.readFileSync(dotStencilFilePath, {encoding: 'utf-8'});
    dotStencilFile = JSON.parse(dotStencilFile);
}

var questions = [
    {
        type: 'input',
        name: 'normalStoreUrl',
        message: 'What is the URL of your store\'s home page?',
        validate: function(val) {
            if (/^https?:\/\//.test(val)) {
                return true;
            } else {
                return 'You must enter a URL';
            }
        },
        default: dotStencilFile && dotStencilFile.normalStoreUrl || undefined
    },
    {
        type: 'input',
        name: 'port',
        message: 'What port would you like to run the server on?',
        default: dotStencilFile && dotStencilFile.port || 3000,
        validate: function(val) {
            if (isNaN(val)) {
                return 'You must enter an integer';
            } else if (val < 1024 || val > 65535) {
                return 'The port number must be between 1025 and 65535';
            } else {
                return true;
            }
        }
    }
];

Inquirer.prompt(questions, function(answers) {
    // preserve the staplerUrl
    if (dotStencilFile && dotStencilFile.staplerUrl) {
        answers.staplerUrl = dotStencilFile.staplerUrl;
    }

    Fs.writeFile(dotStencilFilePath, JSON.stringify(answers, null, 2), function(err) {
        var ready = 'You are now ready to go! To start developing, run $ stencil start',
            bundleTask;

        if (err) {
            throw err;
        }

        // bundle dev dependencies
        themeConfig = ThemeConfig.getInstance(themeConfigPath).getConfig();
        if (themeConfig.jspm) {
            if (! Fs.existsSync(Path.join(themePath, themeConfig.jspm.jspm_packages_path))) {
                console.log('Error: The path you specified for your "jspm_packages" folder does not exist.'.red);
                return console.log(
                    'Please check your '.red +
                    'jspm.jspm_packages_path'.cyan +
                    ' setting in your theme\'s '.red +
                    'config.json'.cyan +
                    ' file to make sure it\'s correct.'.red
                );
            }

            bundleTask = JspmAssembler.assemble(
                {
                    bootstrap: themeConfig.jspm.dev.bootstrap
                },
                themePath
            );

            bundleTask(function() {
                console.log(ready);
            });

        } else {
            console.log(ready);
        }
    });
});
